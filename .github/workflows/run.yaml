---
name: 'Drupal 9 updates'

on:
  push:
    branches-ignore:
      - 'main'

# on:
#   schedule:
#     - cron:  "42 7 15 * *" #build project on the 15th day of every month on the 42nd minute of the 7th hour.

env:
    GITHUB_TOKEN: ${{ secrets.DEVREL_TOKEN }}
    GIT_EMAIL: ${{ secrets.DEVREL_EMAIL }}
    GIT_USER: ${{ secrets.DEVREL_USER }}

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
              template: ['drupal9', 'wordpress-composer']
        name: 'Set up starter-builder'
        steps: 
            - uses: actions/checkout@v2
            - name: Setup Python
              uses: actions/setup-python@v2
              with:
                python-version: 3.9
            - name: Install poetry
              run: |
                python -m pip install poetry==1.1.11
            - name: Configure poetry
              run: |
                python -m poetry config virtualenvs.in-project true
            - name: Cache the virtualenv
              uses: actions/cache@v2
              with:
                path: ./.venv
                key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
            - name: Install dependencies
              run: |
                python -m poetry install
            - name: Expose current template
              id: template_id
              run: |
                  export TEMPLATE=${{ matrix.template }}
                  echo "::set-output name=current_template::$TEMPLATE"
            - name: 'starter-builder: cleanup'
              run: |
                python -m poetry run doit cleanup:$TEMPLATE
            - name: 'starter-builder: init'
              uses: actions/checkout@v2
              with:
                token: ${{ secrets.TOKEN }}
                repository: platformsh-templates/${{ steps.template_id.outputs.current_template }}
                path: templates/${{ steps.template_id.outputs.current_template }}/build
            - name: 'starter-builder: init-remote'
              run: |
                # Get the remote 
                REMOTE_UPSTREAM=$(python -m poetry run python -c 'import dodo; import os; print(dodo.project_factory(os.environ["TEMPLATE"]).remote)')
                echo "Upstream found: $REMOTE_UPSTREAM"
                cd templates/$TEMPLATE/build
                git remote add project $REMOTE_UPSTREAM
                # Set up Git.
                git config --global user.email "$GIT_EMAIL"
                git config --global user.name "$GIT_USER"
            - name: 'starter-builder: update'
              run: |
                python -m poetry run doit update:$TEMPLATE
            - name: 'starter-builder: platformify'
              run: |
                python -m poetry run doit platformify:$TEMPLATE
            - name: 'starter-builder: branch'
              run: |
                python -m poetry run doit branch:$TEMPLATE
            - name: 'starter-builder: push'
              run: |
                python -m poetry run doit push:$TEMPLATE
    # pull:
    #     name: 'Open pull request for update'
    #     runs-on: ubuntu-latest
    #     needs: build
    #     steps:
    #         - name: 'starter-builder: pull-request'
    #           run: |
    #             curl -s --location --request POST --header "Authorization: Bearer $GITHUB_TOKEN" \
    #                 --header 'Content-Type: application/json' \
    #                 --data-raw '{"head": "update", "base": "master", "title": "auto-updates"}' \
    #                 https://api.github.com/repos/$GITHUB_REPOSITORY/pulls
